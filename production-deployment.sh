#!/bin/bash

# Script completo de deploy para produ√ß√£o
# Execute este script no servidor: bash production-deployment.sh

echo "üöÄ Iniciando configura√ß√£o de produ√ß√£o para WhatsApp Bot Pro..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir com cores
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# 1. Configurar Nginx
echo "üîß Configurando Nginx..."

# Backup da configura√ß√£o existente se houver
if [ -f "/etc/nginx/sites-available/chatbotwhats.online" ]; then
    cp /etc/nginx/sites-available/chatbotwhats.online /etc/nginx/sites-available/chatbotwhats.online.backup
    print_warning "Backup da configura√ß√£o Nginx existente criado"
fi

# Copiar nova configura√ß√£o
cp nginx-config.conf /etc/nginx/sites-available/chatbotwhats.online

# Criar link simb√≥lico se n√£o existir
if [ ! -L "/etc/nginx/sites-enabled/chatbotwhats.online" ]; then
    ln -s /etc/nginx/sites-available/chatbotwhats.online /etc/nginx/sites-enabled/
    print_status "Link simb√≥lico do Nginx criado"
fi

# Testar configura√ß√£o do Nginx
if nginx -t; then
    print_status "Configura√ß√£o do Nginx v√°lida"
    systemctl reload nginx
    print_status "Nginx recarregado"
else
    print_error "Erro na configura√ß√£o do Nginx"
    exit 1
fi

# 2. Configurar banco de dados
echo "üóÑÔ∏è  Configurando banco de dados..."

print_warning "IMPORTANTE: Configure o banco de dados MySQL manualmente:"
echo "1. Acesse: mysql -u root -p"
echo "2. Execute o script: source $(pwd)/database-setup.sql"
echo "3. Defina uma senha forte para o usu√°rio 'chatbotwhats'"
echo ""

# 3. Executar migrations
echo "üìä Executando migrations do banco..."

if [ -f ".env" ]; then
    npm run migrate:up
    print_status "Migrations executadas"
else
    print_error "Arquivo .env n√£o encontrado! Configure as vari√°veis de ambiente primeiro."
    exit 1
fi

# 4. Configurar PM2
echo "‚öôÔ∏è  Configurando PM2..."

# Parar processo se estiver rodando
pm2 stop whatsapp-bot 2>/dev/null || true

# Iniciar com ecosystem.config.js
pm2 start ecosystem.config.js --env production

# Salvar configura√ß√£o do PM2
pm2 save

# Configurar PM2 para iniciar com o sistema
pm2 startup

print_status "PM2 configurado e aplica√ß√£o iniciada"

# 5. Configurar SSL (Let's Encrypt)
echo "üîí Configura√ß√£o SSL opcional..."

print_warning "Para configurar SSL (recomendado para produ√ß√£o):"
echo "1. Instale certbot: sudo apt install certbot python3-certbot-nginx"
echo "2. Obtenha certificado: sudo certbot --nginx -d chatbotwhats.online"
echo "3. Teste renova√ß√£o: sudo certbot renew --dry-run"
echo ""

# 6. Configurar firewall
echo "üõ°Ô∏è  Configurando firewall..."

# Permitir portas necess√°rias
ufw allow 22/tcp    # SSH
ufw allow 80/tcp    # HTTP
ufw allow 443/tcp   # HTTPS
ufw allow 8443/tcp  # CloudPanel

print_status "Regras do firewall configuradas"

# 7. Status final
echo ""
echo "üéâ Configura√ß√£o de produ√ß√£o conclu√≠da!"
echo ""
print_status "Servi√ßos configurados:"
echo "  ‚Ä¢ Nginx: Proxy reverso configurado"
echo "  ‚Ä¢ PM2: Gerenciando processo da aplica√ß√£o"
echo "  ‚Ä¢ Banco: Pronto para uso (configure manualmente)"
echo "  ‚Ä¢ Firewall: Portas necess√°rias liberadas"
echo ""
print_warning "Pr√≥ximos passos:"
echo "1. Configure o banco de dados MySQL"
echo "2. Edite o arquivo .env com as credenciais corretas"
echo "3. Reinicie a aplica√ß√£o: pm2 restart whatsapp-bot"
echo "4. Configure SSL para HTTPS (recomendado)"
echo "5. Acesse: http://chatbotwhats.online"
echo ""
echo "üìä Monitoramento:"
echo "  ‚Ä¢ Logs da aplica√ß√£o: pm2 logs whatsapp-bot"
echo "  ‚Ä¢ Status PM2: pm2 status"
echo "  ‚Ä¢ Logs Nginx: tail -f /var/log/nginx/chatbotwhats.online.error.log"
echo ""
print_status "Deploy conclu√≠do com sucesso! üöÄ"
